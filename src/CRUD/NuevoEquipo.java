    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CRUD;

import conexion.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import java.awt.Component;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jsaca
 */
public class NuevoEquipo extends javax.swing.JInternalFrame {

   conexionSQL cc = new conexionSQL();
   Connection con = cc.conexion();
   int cod_sin_equipo = 81;
    
    public NuevoEquipo() {
        initComponents();
        Rectangle screenSize = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().getBounds();
        int width = (int)screenSize.getWidth();
        int height = (int)screenSize.getHeight();
        
        this.setSize(width, height);
        jlNuevoEquipo.setAlignmentX(Component.CENTER_ALIGNMENT);
        btnCrearEquipo.setAlignmentX(Component.CENTER_ALIGNMENT);
        mostrarJugadores(cod_sin_equipo, jtJugadores);

   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlJugadores = new javax.swing.JLabel();
        jlNuevoEquipo = new javax.swing.JLabel();
        btnAgregarJugador = new javax.swing.JButton();
        jlJugadoresAgregados = new javax.swing.JLabel();
        btnCrearEquipo = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtJugadores = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtJugadoresAgregados = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));

        jlJugadores.setBackground(new java.awt.Color(242, 242, 242));
        jlJugadores.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jlJugadores.setForeground(new java.awt.Color(255, 0, 0));
        jlJugadores.setText("Jugadores");

        jlNuevoEquipo.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jlNuevoEquipo.setForeground(new java.awt.Color(255, 0, 0));
        jlNuevoEquipo.setText("Nuevo Equipo");

        btnAgregarJugador.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnAgregarJugador.setText("Agregar Jugador");
        btnAgregarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarJugadorActionPerformed(evt);
            }
        });

        jlJugadoresAgregados.setBackground(new java.awt.Color(242, 242, 242));
        jlJugadoresAgregados.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jlJugadoresAgregados.setForeground(new java.awt.Color(255, 0, 0));
        jlJugadoresAgregados.setText("Jugadores Agregados");

        btnCrearEquipo.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnCrearEquipo.setText("Terminar");
        btnCrearEquipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearEquipoActionPerformed(evt);
            }
        });

        jtJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtJugadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtJugadoresMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtJugadores);

        jtJugadoresAgregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jtJugadoresAgregados);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(601, 601, 601)
                        .addComponent(jlNuevoEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(637, 637, 637)
                        .addComponent(btnCrearEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(76, 76, 76)))
                .addGap(690, 690, 690))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1136, 1136, 1136))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlJugadores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(385, 385, 385))
                            .addComponent(jScrollPane3))
                        .addGap(160, 160, 160)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jlJugadoresAgregados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(277, 277, 277))
                            .addComponent(jScrollPane4))
                        .addGap(218, 218, 218))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jlNuevoEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(81, 81, 81)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlJugadores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlJugadoresAgregados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addComponent(btnAgregarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 33, Short.MAX_VALUE)
                .addGap(331, 331, 331)
                .addComponent(btnCrearEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarJugadorActionPerformed
        int cod_equipo = codEquipo();
        cambiarEquipoDeJugador(cod_equipo, jtJugadores);
        mostrarJugadores(cod_equipo, jtJugadoresAgregados);
        mostrarJugadores(cod_sin_equipo, jtJugadores);
        
    }//GEN-LAST:event_btnAgregarJugadorActionPerformed

    private void jtJugadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtJugadoresMouseClicked
       
    }//GEN-LAST:event_jtJugadoresMouseClicked

    private void btnCrearEquipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearEquipoActionPerformed
        Menu menu = new Menu();
        
        Main.Escritorio.add(menu);
        menu.setVisible(true);
        menu.setSize(Main.Escritorio.getSize());
        
        this.dispose();
    }//GEN-LAST:event_btnCrearEquipoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarJugador;
    private javax.swing.JButton btnCrearEquipo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel jlJugadores;
    private javax.swing.JLabel jlJugadoresAgregados;
    private javax.swing.JLabel jlNuevoEquipo;
    private javax.swing.JTable jtJugadores;
    private javax.swing.JTable jtJugadoresAgregados;
    // End of variables declaration//GEN-END:variables

   protected Integer codEquipo(){
       int cod_equipo = 0;
       
       String SQL = "Select cod_equipo from equipos";
       
       try{
           Statement st = con.createStatement();
           ResultSet rs = st.executeQuery(SQL);
           
           rs.last();
           
           cod_equipo = rs.getInt("cod_equipo");
           
           
       }catch(Exception e){
            JOptionPane.showMessageDialog(null, "ERROR AL CONSEGUIR EL CODIGO " + e.getMessage());
       }
       
       return cod_equipo;
   }
   
   
   protected void mostrarJugadores(int cod_equipo, javax.swing.JTable tabla){
      String[] titulos = {"Codigo", "Nombre", "Apellido", "Numero", "Posicion", "Codigo Equipo"};
      String[] registros = new String[6];
      
      DefaultTableModel modelo = new DefaultTableModel(null, titulos);
      String SQL = "Select * from jugadores";
      
      try{
          
          Statement st = con.createStatement();
          ResultSet rs = st.executeQuery(SQL);
          
          while(rs.next()){
              if(rs.getInt("cod_equipo_de_jugador") == cod_equipo){
                registros[0] = rs.getString("cod_jugador");
                registros[1] = rs.getString("Nombre");
                registros[2] = rs.getString("Apellidos");
                registros[3] = rs.getString("Numero_Jugador");
                registros[4] = rs.getString("Posicion");
                if(registros[4].equals("1")){
                    registros[4] = "Pasador";
                } else if(registros[4].equals("2")){
                    registros[4] = "Lateral";
                }else if(registros[4].equals("3")){
                    registros[4] = "Quinto";
                } else if(registros[4].equals("4")){
                    registros[4] = "Centro";
                }else{
                    registros[4] = "Libero";
                }
                registros[5] = rs.getString("cod_equipo_de_jugador");  
                
                modelo.addRow(registros);
              }else{
                  
              }
          }
          
          tabla.setModel(modelo);
          
      }catch(Exception e){
          JOptionPane.showMessageDialog(null, "ERROR AL MOSTRAR JUGADORES" + e.getMessage());
      }   
   }
   
   protected void cambiarEquipoDeJugador(int cod_equipo_de_jugador, javax.swing.JTable tabla){
       int filaSeleccionada = tabla.getSelectedRow();
       
       int cod_jugador = Integer.parseInt(tabla.getValueAt(filaSeleccionada, 0).toString());
       String nombre = tabla.getValueAt(filaSeleccionada, 1).toString();
       String apellidos = tabla.getValueAt(filaSeleccionada, 2).toString();
       int numero_jugador = Integer.parseInt(tabla.getValueAt(filaSeleccionada, 3).toString());
       String posicion = tabla.getValueAt(filaSeleccionada, 4).toString();
       int id_posicion = 0;
       if(posicion.equals("Pasador")){
                    id_posicion = 1;
                } else if(posicion.equals("Lateral")){
                    id_posicion = 2;
                }else if(posicion.equals("Quinto")){
                    id_posicion = 3;
                } else if(posicion.equals("Centro")){
                    id_posicion = 4;
                }else{
                    id_posicion = 5;
                }

       try{
           PreparedStatement pst = con.prepareStatement("UPDATE jugadores SET Nombre='"+nombre+"', Apellidos='"+apellidos+"', Numero_Jugador='"+numero_jugador+"', Posicion='"+id_posicion+"', cod_equipo_de_jugador='"+cod_equipo_de_jugador+"' WHERE cod_jugador='"+cod_jugador+"'");
           pst.executeUpdate();
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Error al cambiar el equipo del jugador " + e.getMessage());
       }
   }
  
}
